plugins {
    id 'org.springframework.boot' version '3.0.2'
    id "io.spring.dependency-management" version "1.1.0"
    id "org.asciidoctor.jvm.convert" version "3.3.2"
    id 'java'
}

sourceCompatibility = '19'
group 'com.springboot.template'
version '1.0-SNAPSHOT'

configurations {
    asciidoctorExtensions
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'mysql:mysql-connector-java'

    //querydsl 추가
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    implementation 'org.projectlombok:lombok:1.18.18'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'

    asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'

    testImplementation "org.springframework.restdocs:spring-restdocs-mockmvc"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

ext {
    snippetsDir = file('build/generated-snippets')
}

asciidoctor {
    dependsOn test
    configurations 'asciidoctorExtensions'
    inputs.dir snippetsDir

    sources {
        include("**/index.adoc", "**/common/*.adoc")
    }
}

task copyDocument(type: Copy) {
    dependsOn asciidoctor
    from file("build/asciidoc/html5")
    into file("src/main/resources/static/docs")
}

build {
    dependsOn copyDocument
}

asciidoctor.doFirst {
    delete file('src/main/resources/static/docs')
}

test {
    outputs.dir snippetsDir
    useJUnitPlatform()
}